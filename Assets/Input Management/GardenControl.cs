//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/Input Management/GardenControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GardenControl : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GardenControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GardenControl"",
    ""maps"": [
        {
            ""name"": ""Plant"",
            ""id"": ""bf469b8f-1da4-4ff7-a71a-ce628ee38576"",
            ""actions"": [
                {
                    ""name"": ""Tap"",
                    ""type"": ""Button"",
                    ""id"": ""8364aa14-a984-4d90-bfc1-6a35d7896a82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drag"",
                    ""type"": ""Value"",
                    ""id"": ""4432f258-b66d-4ba9-82bd-30c49d201a0b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Hold"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d8193663-c952-4a3f-b6f1-069c30081f61"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""09597d47-7deb-449c-ad01-42a79b60400f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirstFingerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""97d0be76-fe16-44b2-890f-e03f8381f5d9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryFingerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""b5838c7e-bb74-4f89-ab91-0fe54256e729"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryTouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""05657cb6-cb26-4b07-b31b-220720e00c6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirstTouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""27f8f9f6-6569-425e-9d69-8e5041bbcb8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b92c5b28-52fd-43f3-87cb-9d73802bbecf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""257170a2-c1b9-40f3-81a6-6fd5bb7151ee"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""MouseDrag"",
                    ""id"": ""09bee3a9-2e0b-4d0f-8d06-5f41fd870e9b"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drag"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""c5f2dc5b-14e8-4b2c-9eec-70ed9580d5f4"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""1a34c1d3-70ce-4d76-9d5f-52da1c59589a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5bcd98ed-22fd-46ea-96f3-69543f04f887"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b7dd9ee-81bc-44f0-95fd-90f3668f983f"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""MouseRotation"",
                    ""id"": ""ed8723b3-4475-4fcd-9e2f-f6906a572a84"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""7e51e3ca-a91a-4200-b485-24502a956493"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""a200707e-711a-4fd9-97fd-3746dc1849f8"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""be8903ac-0f78-450b-bea5-f7563fc2351d"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstFingerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""454c6ee6-c0a1-43a7-a3af-3cce3d147a72"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryFingerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3266d1f-8e07-4ad1-b569-5d439c2cd150"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e4b9a44-16b7-47db-a54e-df38ba261dae"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstTouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Plant
        m_Plant = asset.FindActionMap("Plant", throwIfNotFound: true);
        m_Plant_Tap = m_Plant.FindAction("Tap", throwIfNotFound: true);
        m_Plant_Drag = m_Plant.FindAction("Drag", throwIfNotFound: true);
        m_Plant_Hold = m_Plant.FindAction("Hold", throwIfNotFound: true);
        m_Plant_Rotation = m_Plant.FindAction("Rotation", throwIfNotFound: true);
        m_Plant_FirstFingerPosition = m_Plant.FindAction("FirstFingerPosition", throwIfNotFound: true);
        m_Plant_SecondaryFingerPosition = m_Plant.FindAction("SecondaryFingerPosition", throwIfNotFound: true);
        m_Plant_SecondaryTouchContact = m_Plant.FindAction("SecondaryTouchContact", throwIfNotFound: true);
        m_Plant_FirstTouchContact = m_Plant.FindAction("FirstTouchContact", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Plant
    private readonly InputActionMap m_Plant;
    private IPlantActions m_PlantActionsCallbackInterface;
    private readonly InputAction m_Plant_Tap;
    private readonly InputAction m_Plant_Drag;
    private readonly InputAction m_Plant_Hold;
    private readonly InputAction m_Plant_Rotation;
    private readonly InputAction m_Plant_FirstFingerPosition;
    private readonly InputAction m_Plant_SecondaryFingerPosition;
    private readonly InputAction m_Plant_SecondaryTouchContact;
    private readonly InputAction m_Plant_FirstTouchContact;
    public struct PlantActions
    {
        private @GardenControl m_Wrapper;
        public PlantActions(@GardenControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Tap => m_Wrapper.m_Plant_Tap;
        public InputAction @Drag => m_Wrapper.m_Plant_Drag;
        public InputAction @Hold => m_Wrapper.m_Plant_Hold;
        public InputAction @Rotation => m_Wrapper.m_Plant_Rotation;
        public InputAction @FirstFingerPosition => m_Wrapper.m_Plant_FirstFingerPosition;
        public InputAction @SecondaryFingerPosition => m_Wrapper.m_Plant_SecondaryFingerPosition;
        public InputAction @SecondaryTouchContact => m_Wrapper.m_Plant_SecondaryTouchContact;
        public InputAction @FirstTouchContact => m_Wrapper.m_Plant_FirstTouchContact;
        public InputActionMap Get() { return m_Wrapper.m_Plant; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlantActions set) { return set.Get(); }
        public void SetCallbacks(IPlantActions instance)
        {
            if (m_Wrapper.m_PlantActionsCallbackInterface != null)
            {
                @Tap.started -= m_Wrapper.m_PlantActionsCallbackInterface.OnTap;
                @Tap.performed -= m_Wrapper.m_PlantActionsCallbackInterface.OnTap;
                @Tap.canceled -= m_Wrapper.m_PlantActionsCallbackInterface.OnTap;
                @Drag.started -= m_Wrapper.m_PlantActionsCallbackInterface.OnDrag;
                @Drag.performed -= m_Wrapper.m_PlantActionsCallbackInterface.OnDrag;
                @Drag.canceled -= m_Wrapper.m_PlantActionsCallbackInterface.OnDrag;
                @Hold.started -= m_Wrapper.m_PlantActionsCallbackInterface.OnHold;
                @Hold.performed -= m_Wrapper.m_PlantActionsCallbackInterface.OnHold;
                @Hold.canceled -= m_Wrapper.m_PlantActionsCallbackInterface.OnHold;
                @Rotation.started -= m_Wrapper.m_PlantActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_PlantActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_PlantActionsCallbackInterface.OnRotation;
                @FirstFingerPosition.started -= m_Wrapper.m_PlantActionsCallbackInterface.OnFirstFingerPosition;
                @FirstFingerPosition.performed -= m_Wrapper.m_PlantActionsCallbackInterface.OnFirstFingerPosition;
                @FirstFingerPosition.canceled -= m_Wrapper.m_PlantActionsCallbackInterface.OnFirstFingerPosition;
                @SecondaryFingerPosition.started -= m_Wrapper.m_PlantActionsCallbackInterface.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.performed -= m_Wrapper.m_PlantActionsCallbackInterface.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.canceled -= m_Wrapper.m_PlantActionsCallbackInterface.OnSecondaryFingerPosition;
                @SecondaryTouchContact.started -= m_Wrapper.m_PlantActionsCallbackInterface.OnSecondaryTouchContact;
                @SecondaryTouchContact.performed -= m_Wrapper.m_PlantActionsCallbackInterface.OnSecondaryTouchContact;
                @SecondaryTouchContact.canceled -= m_Wrapper.m_PlantActionsCallbackInterface.OnSecondaryTouchContact;
                @FirstTouchContact.started -= m_Wrapper.m_PlantActionsCallbackInterface.OnFirstTouchContact;
                @FirstTouchContact.performed -= m_Wrapper.m_PlantActionsCallbackInterface.OnFirstTouchContact;
                @FirstTouchContact.canceled -= m_Wrapper.m_PlantActionsCallbackInterface.OnFirstTouchContact;
            }
            m_Wrapper.m_PlantActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Tap.started += instance.OnTap;
                @Tap.performed += instance.OnTap;
                @Tap.canceled += instance.OnTap;
                @Drag.started += instance.OnDrag;
                @Drag.performed += instance.OnDrag;
                @Drag.canceled += instance.OnDrag;
                @Hold.started += instance.OnHold;
                @Hold.performed += instance.OnHold;
                @Hold.canceled += instance.OnHold;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @FirstFingerPosition.started += instance.OnFirstFingerPosition;
                @FirstFingerPosition.performed += instance.OnFirstFingerPosition;
                @FirstFingerPosition.canceled += instance.OnFirstFingerPosition;
                @SecondaryFingerPosition.started += instance.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.performed += instance.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.canceled += instance.OnSecondaryFingerPosition;
                @SecondaryTouchContact.started += instance.OnSecondaryTouchContact;
                @SecondaryTouchContact.performed += instance.OnSecondaryTouchContact;
                @SecondaryTouchContact.canceled += instance.OnSecondaryTouchContact;
                @FirstTouchContact.started += instance.OnFirstTouchContact;
                @FirstTouchContact.performed += instance.OnFirstTouchContact;
                @FirstTouchContact.canceled += instance.OnFirstTouchContact;
            }
        }
    }
    public PlantActions @Plant => new PlantActions(this);
    public interface IPlantActions
    {
        void OnTap(InputAction.CallbackContext context);
        void OnDrag(InputAction.CallbackContext context);
        void OnHold(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnFirstFingerPosition(InputAction.CallbackContext context);
        void OnSecondaryFingerPosition(InputAction.CallbackContext context);
        void OnSecondaryTouchContact(InputAction.CallbackContext context);
        void OnFirstTouchContact(InputAction.CallbackContext context);
    }
}
